syntax = "proto3";

package api;

service BrokerService {
    rpc ProduceBatch (MessagesBatchRequest) returns (MessagesBatchResponse);
    rpc GetLastMessage (GetLastMessageRequest) returns (GetLastMessageResponse);
    rpc GetNextMessage (GetNextMessageRequest) returns (GetNextMessageResponse);
    rpc CreateTopic (CreateTopicsRequest) returns (CreateTopicsResponse);
    // TODO: Delete or Remove
    // rpc DeleteTopic (DeleteTopicRequest) returns (DeleteTopicResponse);
    // rpc ListTopics (ListTopicsRequest) returns (ListTopicResponse);
  }

  message Message {
    uint64 seq = 1;
    uint64 timestamp = 2;
    bytes payload = 3;
    map<string, bytes> meta = 4;
  }

  message MessageWithRoute {
    Message message = 1;
    string topic = 2;

  }

  message MessagesBatchRequest {
    repeated MessageWithRoute messages = 1;
  }

  message Error {
    uint64 code = 1;
    string message = 2;
  }

  message MessagesBatchResponse {
    Error error = 1;
    map<string /*topicName*/, uint64 /*seqNum*/> consumedSeqs = 2;
    map<string /*topicName*/, uint64 /*seqNum*/> producedSeqs = 3;
  }

  message GetLastMessageRequest {
      string topic = 1;
  }

  message GetLastMessageResponse {
    Error error = 1;
    Message message = 2;
  }

  message GetNextMessageRequest {
      string topic = 1;
      uint64 seq = 2;
  }

  message GetNextMessageResponse {
    Error error = 1;
    Message message = 2;
  }

  message CreateTopicsRequest {
      string topic = 1;
  }

  message CreateTopicsResponse {
    Error error = 1;
  }